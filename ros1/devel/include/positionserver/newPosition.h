// Generated by gencpp from file positionserver/newPosition.msg
// DO NOT EDIT!


#ifndef POSITIONSERVER_MESSAGE_NEWPOSITION_H
#define POSITIONSERVER_MESSAGE_NEWPOSITION_H

#include <ros/service_traits.h>


#include <positionserver/newPositionRequest.h>
#include <positionserver/newPositionResponse.h>


namespace positionserver
{

struct newPosition
{

typedef newPositionRequest Request;
typedef newPositionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct newPosition
} // namespace positionserver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::positionserver::newPosition > {
  static const char* value()
  {
    return "ff8d7d66dd3e4b731ef14a45d38888b6";
  }

  static const char* value(const ::positionserver::newPosition&) { return value(); }
};

template<>
struct DataType< ::positionserver::newPosition > {
  static const char* value()
  {
    return "positionserver/newPosition";
  }

  static const char* value(const ::positionserver::newPosition&) { return value(); }
};


// service_traits::MD5Sum< ::positionserver::newPositionRequest> should match 
// service_traits::MD5Sum< ::positionserver::newPosition > 
template<>
struct MD5Sum< ::positionserver::newPositionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::positionserver::newPosition >::value();
  }
  static const char* value(const ::positionserver::newPositionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::positionserver::newPositionRequest> should match 
// service_traits::DataType< ::positionserver::newPosition > 
template<>
struct DataType< ::positionserver::newPositionRequest>
{
  static const char* value()
  {
    return DataType< ::positionserver::newPosition >::value();
  }
  static const char* value(const ::positionserver::newPositionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::positionserver::newPositionResponse> should match 
// service_traits::MD5Sum< ::positionserver::newPosition > 
template<>
struct MD5Sum< ::positionserver::newPositionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::positionserver::newPosition >::value();
  }
  static const char* value(const ::positionserver::newPositionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::positionserver::newPositionResponse> should match 
// service_traits::DataType< ::positionserver::newPosition > 
template<>
struct DataType< ::positionserver::newPositionResponse>
{
  static const char* value()
  {
    return DataType< ::positionserver::newPosition >::value();
  }
  static const char* value(const ::positionserver::newPositionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // POSITIONSERVER_MESSAGE_NEWPOSITION_H
